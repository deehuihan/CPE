/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <iostream>
#include<vector>
using namespace std;
int main()
{
    //記得要使用getline， 因為會有  "SAME AS 2" 這種string, 用cin 會出錯。
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        vector<int> vec (n);
        string instruction;
        getline(cin,instruction);
        for(int i=0;i<n;i++){
            getline(cin,instruction);
            if(instruction == "LEFT"){
                vec[i]=1;
            }
            else if(instruction =="RIGHT"){
                vec[i]=-1;
            }
            else{
                int number=0;
                for(int j=8;j<instruction.length();j++){
                    number = number*10 + (instruction[j]-'0');
                }
                vec[i]=vec[number-1];
            }
        }
        int ans=0;
        for(int i=0;i<vec.size();i++){
            ans+=vec[i];
        }
        cout<<ans<<endl;
    }
    return 0;
}




/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <iostream>
#include<vector>
using namespace std;
int main()
{
    int t;
    cin>>t;
    cin.ignore();
    while(t--){
        int n;
        cin>>n;
        cin.ignore();
        vector<int> vec;
        string instruction;
        for(int i=0;i<n;i++){
            getline(cin,instruction);
            if(instruction == "LEFT"){
                vec.push_back(1);
            }
            else if(instruction =="RIGHT"){
                vec.push_back(-1);
            }
            else{
                int number=0;
                for(int j=8;j<instruction.length();j++){
                    number = number*10 + (instruction[j]-'0');
                }
                vec.push_back(vec[number-1]);
            }
        }
        int ans=0;
        for(int i=0;i<vec.size();i++){
            ans+=vec[i];
        }
        cout<<ans<<endl;
    }
    return 0;
}
