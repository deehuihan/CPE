#include <iostream>
#include <vector>
#include <stack>
using namespace std;

int main() {
    int N, M;
    while (cin >> N >> M && N != 0 && M != 0) {
        int number;
        vector<int> vec;
        vector<vector<int>> mp;
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < M; j++) {
                cin>>number;
                vec.push_back(number);
            }
            mp.push_back(vec);
            vec.clear();
        }

        int maxArea = 0;
        vector<int> height(M, 0);

        for (int i = 0; i < N; i++) {
            for (int j = 0; j < M; j++) {
                if (mp[i][j] == 0) {
                    height[j]++;
                } else {
                    height[j] = 0;
                }
            }

            stack<int> stk;
            height.push_back(0);
            for (int j = 0; j < height.size(); j++) {
                while (!stk.empty() && height[j] < height[stk.top()]) {
                    int h = height[stk.top()];
                    stk.pop();
                    int w = 0;
                    if(stk.empty()){
                        w = j;
                    }
                    else{
                        w = j - stk.top() - 1;
                    }
                    maxArea = max(maxArea, h * w);
                }
                stk.push(j);
            }
            height.pop_back();
        }

        cout << maxArea << endl;
    }
}
