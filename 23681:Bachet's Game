/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <iostream>
#include <vector>
using namespace std;
int main()
{
    int n,m;
    while(cin>>n>>m){
        int number;
        vector<int> vec;
        for(int i=0;i<m;i++){
            cin>>number;
            vec.push_back(number);
        }
        vector<bool> dp(n+1,false);
        for(int i=1;i<=50;i++){ //這個部分算的是 dp[50] 裡面全部輸贏，但這是站在 stan的角度。
            for(int j=0;j<m;j++){
                if(i-vec[j]>=0 && dp[i-vec[j]]==false){  //input 5 2 1 3。假設現在是一顆石頭 i=1,j=1,所以i-j = 1-1>=0,  dp[0]==false 表示對方輸，所以stan true，break
                    dp[i]=true;                         // 當2顆時候 i=2,j=1，dp[1]==true，表示對方會贏，所以j繼續探索。i=2,j=2 (vec[2]=3), 2-3<0，所以這邊得知在
                    break;                              //石頭2的時候不管stan move 1或是3時候都會輸。
                }                                       //當3顆的時候 i=3,j=1,3-vec[1] = 3-1=2,2>=0,dp[2]==false 表示拿到dp[2]的時候會是輸的，所以dp[3]=true，3顆會贏
            }
        }                   //if(i-vec[j]>=0 && dp[i-vec[j]]==false) 可以理解為現在是stan的round，現在石頭數量是大於0，而且現在有的石頭數量會導致輸，剛好這個時候
                            //是對方在這個石頭的量上，所以下一個環節dp[i]就會是贏的。所以計算好了所有只能取 1或3的時候，再把我們要的題目，例如 n=5, 就可以得知
                            //在5的時候，stan是會不會會贏，否者就是ollie 贏。
        if(dp[n]){
            cout<<"Stan wins"<<endl;
        }
        else{
            cout<<"Ollie wins"<<endl;
        }
        vec.clear();
        dp.clear();
    }
    return 0;
}
