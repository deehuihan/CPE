问题：
你们需要判断是否能把这些食物平均分成两部分，每部分的重量相同。例如，如果你们带了 1, 2, 3, 4 重量的食物，可以分成两部分 [1, 4] 和 [2, 3]，每部分的总重量都是 5。这样就可以让两个人各背一个背包，重量相同。

具体步骤：

总重量是否为偶数：首先，计算所有食物的总重量。如果总重量是奇数，那肯定不可能分成两个重量相等的部分。例如，如果总重量是 11，无法分成两个重量都是 5.5 的部分。
寻找合适的组合：如果总重量是偶数，再判断是否能找到某些食物，使它们的总重量等于总重量的一半。如果可以，就能分成两个重量相等的部分。

加入帶了 1 2 3 4, total = 10 ,剛好可以 [1,4] [2,3]
如果帶了 1 2 5 10, total = 18, 但是怎麼樣分兩個都沒辦法平均 [1,2,5] [10] 不平等，答案是"NO“。 所以偶數也要計算

#include <iostream>
#include <vector>
#include <cstdio>
#include <string>
#include <sstream>
using namespace std;

int main() {
    int m; // 定義測試用例的數量
    cin >> m; // 從標準輸入讀取測試用例數量
    cin.ignore(); // 忽略緩衝區中的換行符
    
    // 遍歷每個測試用例
    while (m--) {
        string input; // 用于存储每个测试用例的输入行
        getline(cin, input); // 从标准输入读取一整行输入
        vector<int> vec; // 用于存储每个测试用例中的数字
        int sum = 0; // 用于存储所有数字的总和
        
        int i = 0;
        while (i < input.length()) {
            int number = 0;
            bool isNumber = false;
            
            // 解析数字
            while (i < input.length() && isdigit(input[i])) {
                number = number * 10 + (input[i] - '0');
                i++;
                isNumber = true;
            }
            
            if (isNumber) {
                vec.push_back(number); // 将数字添加到向量中
                sum += number; // 将数字累加到总和中
            }
            
            // 跳过非数字字符
            while (i < input.length() && !isdigit(input[i])) {
                i++;
            }
        }
        // 如果sum == 奇數，則不可能分成兩個和相等的子集
        if (sum % 2 == 1) {
            cout << "NO" << endl;
            continue; 
        }
        // 動態規劃數組，用於記錄某些數字和是否可以達到
        bool dp[200]={false};
        dp[0]=true;
        // 動態規劃過程
        for (int i = 0; i < vec.size(); i++) { 
            for (int j = sum; j >= vec[i]; j--) { // 從sum開始計算，到 vec[i] 就好
            //因為之後要進行 j - vec[i]，j 小於 vec[i] 沒有意義；
                if (dp[j - vec[i]]) {
                    dp[j] = true; 
                }
            }
        }
        // 如果和的一半可以達到，則可以分成兩個和相等的子集
        if (dp[sum / 2] == true) {
            cout << "YES" << endl; // 輸出 "YES"
        } else {
            cout << "NO" << endl; // 輸出 "NO"
        }
    }
    return 0;
}
