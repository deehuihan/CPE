#include <iostream>
#include <set>
#include<vector>
#include<string>
#include<sstream>
#include<algorithm>
#include<map>
using namespace std;
int reverse(int a) {
	int b = 0;
	while (a > 0) {
		b = b * 10;
		b = b + a % 10;
		a = a / 10;
	}
	return b;
}

const int LIMIT = 1000000;

int main()
{
	bool composite[LIMIT] = { true };
	for (int i = 2; i < LIMIT; ++i) {
		if (!composite[i]) {
			for (int j = i + i; j < LIMIT; j+=i) {
				composite[j] = true;
			}
		}
	}
	int N;
	while (cin >> N) {
		if (composite[N]) {
			cout << N << " is not prime." << endl;
			continue;
		}
		int reverseN = reverse(N);
		if (reverseN != N && !composite[reverseN]) {
			cout << N << " is emirp." << endl;
		}
		else {
			cout << N << " is prime." << endl;
		}
	}
}
